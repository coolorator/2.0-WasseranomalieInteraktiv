<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <title>Interaktive Dichteanomalie</title>
    
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 0;
            padding: 1rem 0;
            background-color: #f4f7f9;
        }
        .container {
            width: 95%;
            max-width: 1000px;
            padding: 1.5rem;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        p { text-align: center; line-height: 1.6; }
        
        /* NEUES Feld für die Zoom-Info */
        #zoom-info {
            background-color: #eef7ff;
            color: #005a9e;
            padding: 10px;
            border-radius: 5px;
            text-align: center;
            font-weight: bold;
            margin-bottom: 1rem;
            min-height: 1.5em; /* Verhindert Springen des Layouts */
        }

        #chart-wrapper {
            position: relative;
            width: 100%;
            touch-action: none;
        }
        #resetZoomBtn {
            margin-top: 1rem;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border: none;
            background-color: #007bff;
            color: white;
            border-radius: 5px;
        }
    </style>
</head>
<body>

    <div class="container">
        <div id="zoom-info"></div>

        <p>
            <b>Wasser ist ein Stoff mit Superkräften.</b> Eine davon ist die Dichteanomalie: Es dehnt sich beim Gefrieren stark aus und hat sein kleinstes Volumen bei +4°C. Erforsche dieses einzigartige Verhalten selbst.
        </p>
        
        <div id="chart-wrapper">
            <canvas id="waterVolumeChart"></canvas>
        </div>
        
        <button id="resetZoomBtn">Zoom zurücksetzen</button>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom"></script>

    <script>
        const canvasElement = document.getElementById('waterVolumeChart');
        const zoomInfoElement = document.getElementById('zoom-info');

        // === DATENGENERIERUNG (angepasst für +20°C) ===
        const dataPoints = [];
        // Generiere Daten von +20°C bis -20°C
        for (let temp = 20; temp >= -20; temp -= 0.1) {
            const currentTemp = parseFloat(temp.toFixed(1));
            let volume;

            if (currentTemp >= 0) { // Flüssiges Wasser
                const volumeAt4C = 1.00000;
                const waterVolumeCoefficient = 7.7e-6;
                volume = volumeAt4C * (1 + waterVolumeCoefficient * Math.pow(currentTemp - 4, 2));
            } else { // Eis
                const volumeWaterAt0 = 1.00000 * (1 + 7.7e-6 * Math.pow(0 - 4, 2));
                const volumeIceAt0 = volumeWaterAt0 * 1.0905;
                const iceContractionCoefficient = 1.53e-4;
                volume = volumeIceAt0 * (1 + iceContractionCoefficient * currentTemp);
            }
            dataPoints.push({x: currentTemp, y: volume});
        }

        // === CHART KONFIGURATION ===
        const waterChart = new Chart(canvasElement, {
            type: 'line',
            data: {
                datasets: [
                    { label: 'Wasser/Eis', data: dataPoints.slice().reverse(), borderColor: 'rgba(54, 162, 235, 1)', borderWidth: 3, pointRadius: 0, pointHitRadius: 10, tension: 0.1 }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                scales: {
                    x: { 
                        type: 'linear', 
                        title: { display: true, text: 'Temperatur (°C)' },
                        // NEUER STARTBEREICH für die X-Achse
                        min: -20, 
                        max: 20 
                    },
                    y: { 
                        title: { display: true, text: 'Relatives Volumen' },
                        // KEIN Start-Zoom mehr, zeigt den gesamten Bereich
                    }
                },
                plugins: {
                    zoom: {
                        pan: { enabled: true, mode: 'x' },
                        zoom: { 
                            wheel: { enabled: true }, 
                            pinch: { enabled: true }, 
                            mode: 'xy', // Zoom in beide Richtungen erlauben
                            // NEUE FUNKTION: Wird nach dem Zoomen ausgeführt
                            onZoomComplete: ({chart}) => {
                                updateZoomInfo(chart);
                            }
                        }
                    },
                    legend: { display: false }
                }
            }
        });

        // === LOGIK FÜR DIE ZOOM-ANZEIGE ===
        let initialYRange = 0;
        // Speichere den anfänglichen Y-Achsen-Bereich, sobald das Diagramm gezeichnet ist
        // Ein kleiner Timeout stellt sicher, dass die Skala vollständig berechnet wurde.
        setTimeout(() => {
            const y_scale = waterChart.scales.y;
            initialYRange = y_scale.max - y_scale.min;
            updateZoomInfo(waterChart); // Initialen Text setzen
        }, 100);

        function updateZoomInfo(chart) {
            const y_scale = chart.scales.y;
            const currentYRange = y_scale.max - y_scale.min;
            
            // Verhindere eine Division durch Null, falls etwas schiefgeht
            if (currentYRange === 0 || initialYRange === 0) return;

            const zoomFactor = initialYRange / currentYRange;

            // Annahme: Das Diagramm ist auf dem Handy initial 6.5cm hoch.
            // Diese Basisgröße wird zur Berechnung der hypothetischen Höhe verwendet.
            const basePhysicalHeightCM = 6.5; 
            const hypotheticalHeightMeters = (basePhysicalHeightCM * zoomFactor) / 100;

            if (zoomFactor > 1.05) { // Zeige die Info nur an, wenn wirklich gezoomt wurde
                zoomInfoElement.textContent = `Wären die Ränder des Diagramms nicht abgeschnitten, hätte es jetzt eine Höhe von ${hypotheticalHeightMeters.toFixed(2)} Metern.`;
            } else {
                zoomInfoElement.textContent = `Zoom-Level: Normal`;
            }
        }

        // Funktionalität für den Reset-Button
        document.getElementById('resetZoomBtn').addEventListener('click', () => {
            waterChart.resetZoom();
            // Textanzeige ebenfalls zurücksetzen
            updateZoomInfo(waterChart);

        });

    </script>

</body>
</html>
